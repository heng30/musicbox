name: GitHub Actions
on: [push]
jobs:
  action-run:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The ${{ github.workspace }} is now ready to test your code on the runner."
      - run: ls ${{ github.workspace }}

      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build llvm curl

      - run: echo "start install Rust..."
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: echo "end install Rust..."

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0
      - run: flutter pub get
      - run: make build-action

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - run: echo "start packing..."
      - name: Export package
        shell: bash
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          binary_name="musicbox"

          output="$binary_name-arm-${{ env.VERSION }}.apk"
          echo "ASSET_ARM=build/$output" >> $GITHUB_ENV

          output="$binary_name-arm64-${{ env.VERSION }}.apk"
          echo "ASSET_ARM64=build/$output" >> $GITHUB_ENV

          output="$binary_name-x64-${{ env.VERSION }}.apk"
          echo "ASSET_X64=build/$output" >> $GITHUB_ENV
      - run: echo "end packing..."

      - name: Upload the package
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.ASSET_ARM }}
            ${{ env.ASSET_ARM64 }}
            ${{ env.ASSET_X64 }}

      - run: echo "üçè This job's status is ${{ job.status }}."
